{"version":3,"sources":["styles/globalStyles.js","assets/img/logo.png","styles/styles.js","components/header/styles.js","components/header/header.jsx","components/content/styles.js","components/content/content.jsx","components/navigation/styles.js","components/navigation/navigation.jsx","components/home/styles.js","components/home/home.jsx","store/board/actions.js","components/editor/components/column/partials/title/styles.js","components/editor/components/column/partials/title/title.jsx","components/editor/components/column/partials/text/styles.js","components/editor/components/column/partials/text/text.jsx","components/editor/components/column/partials/list/styles.js","components/editor/components/column/partials/list/list.jsx","components/editor/components/column/styles.js","components/editor/components/column/column.jsx","components/editor/styles.js","components/editor/editor.jsx","components/app.jsx","store/board/reducer.js","store/store.js","index.jsx"],"names":["GlobalStyle","createGlobalStyle","color","Wrapper","styled","div","FlexContainer","$direction","$wrap","$justify","$align","MainButton","button","$style","MainLink","NavLink","Space","Container","GS","Logo","img","Button","Header","src","logo","alt","GridWrapper","Content","children","Link","linksData","to","text","Navigation","pathname","useLocation","map","undefined","Title","h3","Text","p","textsData","Home","elem","setBoardColumns","createAction","boardColumns","payload","createColumn","listId","dispatch","getRootState","board","result","items","createElement","elemId","type","id","content","reorder","list","startIndex","endIndex","splice","removed","reorderColumn","reorderElement","source","destination","droppableId","elemItems","index","target","find","isDragging","isGroupedOver","provided","ref","innerRef","draggableProps","dragHandleProps","props","isDraggingOver","isDraggingFrom","DropZone","List","dropProvided","dropSnapshot","Boolean","draggingFromThisWith","droppableProps","draggableId","shouldRespectForceTouch","dragProvided","dragSnapshot","combineTargetFor","placeholder","MenuContainer","Input","input","Menu","MenuItem","addingOptions","Column","listIndex","useDispatch","useState","inputValue","setInputValue","snapshot","value","onChange","e","onClick","boardActionCreator","uuid","Control","AddGroupButton","DndWrapper","Editor","useSelector","store","onDragEnd","App","exact","path","component","localData","localStorage","getItem","JSON","parse","initialState","reducer","createReducer","builder","addCase","state","action","configureStore","subscribe","setItem","stringify","getState","render","basename","document","getElementById"],"mappings":"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","file":"static/js/main.83b7510f.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components';\n\nconst reset = `\n  html {\n    box-sizing: border-box;\n  }\n  \n  *, *:before, *:after {\n    box-sizing: inherit;\n  }\n\n  html, body, div, span, applet, object, iframe,\n  h1, h2, h3, h4, h5, h6, p, blockquote, pre,\n  a, abbr, acronym, address, big, cite, code,\n  del, dfn, em, img, ins, kbd, q, s, samp,\n  small, strike, strong, sub, sup, tt, var,\n  b, u, i, center,\n  dl, dt, dd, ol, ul, li,\n  fieldset, form, label, legend,\n  table, caption, tbody, tfoot, thead, tr, th, td,\n  article, aside, canvas, details, embed,\n  figure, figcaption, footer, header, hgroup,\n  menu, nav, output, ruby, section, summary,\n  time, mark, audio, video {\n    margin: 0;\n    padding: 0;\n    border: 0;\n    font-size: 100%;\n    font: inherit;\n    vertical-align: baseline;\n  }\n\n  :focus {\n    outline: 0;\n  }\n\n  article, aside, details, figcaption, figure,\n  footer, header, hgroup, menu, nav, section {\n    display: block;\n  }\n\n  body {\n    line-height: 1;\n  }\n\n  ol, ul {\n    list-style: none;\n  }\n\n  blockquote, q {\n    quotes: none;\n  }\n\n  blockquote:before, blockquote:after,\n  q:before, q:after {\n    content: '';\n    content: none;\n  }\n\n  table {\n    border-collapse: collapse;\n    border-spacing: 0;\n  }\n\n  input[type=search]::-webkit-search-cancel-button,\n  input[type=search]::-webkit-search-decoration,\n  input[type=search]::-webkit-search-results-button,\n  input[type=search]::-webkit-search-results-decoration {\n    -webkit-appearance: none;\n    -moz-appearance: none;\n  }\n\n  input[type=search] {\n    -webkit-appearance: none;\n    -moz-appearance: none;\n    -webkit-box-sizing: content-box;\n    -moz-box-sizing: content-box;\n    box-sizing: content-box;\n  }\n\n  textarea {\n    overflow: auto;\n    vertical-align: top;\n    resize: vertical;\n  }\n\n  audio,\n  canvas,\n  video {\n    display: inline-block;\n    *display: inline;\n    *zoom: 1;\n    max-width: 100%;\n  }\n\n  audio:not([controls]) {\n    display: none;\n    height: 0;\n  }\n\n  [hidden] {\n    display: none;\n  }\n\n  html {\n    font-size: 100%;\n    -webkit-text-size-adjust: 100%;\n    -ms-text-size-adjust: 100%;\n  }\n\n  a:focus {\n    outline: thin dotted;\n  }\n\n  a:active,\n  a:hover {\n    outline: 0;\n  }\n\n  img {\n    border: 0;\n    -ms-interpolation-mode: bicubic;\n  }\n\n  figure {\n    margin: 0;\n  }\n\n  form {\n    margin: 0;\n  }\n\n  fieldset {\n    border: 1px solid #c0c0c0;\n    margin: 0 2px;\n    padding: 0.35em 0.625em 0.75em;\n  }\n\n  legend {\n    border: 0;\n    padding: 0;\n    white-space: normal;\n    *margin-left: -7px;\n  }\n\n  button,\n  input,\n  select,\n  textarea {\n    font-size: 100%;\n    margin: 0;\n    vertical-align: baseline;\n    *vertical-align: middle;\n  }\n\n  button,\n  input {\n    line-height: normal;\n  }\n\n  button,\n  select {\n    text-transform: none;\n  }\n\n  button {\n    border: none;\n    background: none;\n  }\n\n  button,\n  html input[type=\"button\"],\n  input[type=\"reset\"],\n  input[type=\"submit\"] {\n    -webkit-appearance: button;\n    cursor: pointer;\n    *overflow: visible;\n  }\n\n  button[disabled],\n  html input[disabled] {\n    cursor: default;\n  }\n\n  input[type=\"checkbox\"],\n  input[type=\"radio\"] {\n    box-sizing: border-box;\n    padding: 0;\n    *height: 13px;\n    *width: 13px;\n  }\n\n  input[type=\"search\"] {\n    -webkit-appearance: textfield;\n    -moz-box-sizing: content-box;\n    -webkit-box-sizing: content-box;\n    box-sizing: content-box;\n  }\n\n  input[type=\"search\"]::-webkit-search-cancel-button,\n  input[type=\"search\"]::-webkit-search-decoration {\n    -webkit-appearance: none;\n  }\n\n  button::-moz-focus-inner,\n  input::-moz-focus-inner {\n    border: 0;\n    padding: 0;\n  }\n\n  textarea {\n    overflow: auto;\n    vertical-align: top;\n  }\n\n  table {\n    border-collapse: collapse;\n    border-spacing: 0;\n  }\n\n  html,\n  button,\n  input,\n  select,\n  textarea {\n    color: #222;\n  }\n\n\n  ::-moz-selection {\n    background: #b3d4fc;\n    text-shadow: none;\n  }\n\n  ::selection {\n    background: #b3d4fc;\n    text-shadow: none;\n  }\n\n  img {\n    vertical-align: middle;\n  }\n\n  fieldset {\n    border: 0;\n    margin: 0;\n    padding: 0;\n  }\n\n  textarea {\n    resize: vertical;\n  }\n\n  .chromeframe {\n    margin: 0.2em 0;\n    background: #ccc;\n    color: #000;\n    padding: 0.2em 0;\n  }\n`;\n\nexport const GlobalStyle = createGlobalStyle`\n  ${reset}\n`;\n","export default __webpack_public_path__ + \"static/media/logo.7a88c1f9.png\";","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nconst color = {\n  primary: '#FFCD52',\n  primaryDark: '#d9ae46',\n  green: '#A0C452',\n  blue: '#08A2B5',\n  blueDark: '#038c9b',\n  red: '#E85D64'\n};\n\nexport const Wrapper = styled.div`\n  width: 100%;\n  max-width: 1340px;\n  margin: 0 auto;\n`;\n\nexport const FlexContainer = styled.div`\n  display: flex;\n  flex-direction: ${({ $direction }) => ($direction || 'row')};\n  flex-wrap: ${({ $wrap }) => ($wrap || 'nowrap')};\n  justify-content: ${({ $justify }) => ($justify || 'flex-start')};\n  align-items: ${({ $align }) => ($align || 'stretch')};\n`;\n\nexport const MainButton = styled.button`\n  border-radius: 3px;\n  font-size: 15px;\n  font-weight: 600;\n  text-align: center;\n  height: 36px;\n  padding: 0 20px;\n  transition: background .3s ease, transform .3s ease, color .2s ease;\n\n  ${({ $style }) => {\n    switch ($style) {\n      case 'secondary':\n        return `\n          color: #3b3b3b;\n          border: 1px solid #e9e9e9;\n\n          &:hover {\n            color: ${color.primary};\n            border: 1px solid ${color.primary};\n          }\n        `;\n      default:\n        return `\n          color: #ffffff;\n          background: ${color.primary};\n\n          &:hover {\n            background: ${color.primaryDark};\n          }\n        `;\n    }\n  }}\n`;\n\nexport const MainLink = styled(NavLink)`\n  display: block;\n  text-decoration: none;\n  border-radius: 5px;\n  font-size: 16px;\n  font-weight: 600;\n  text-align: left;\n  padding: 7px 20px;\n  transition: background .3s ease, transform .3s ease, color .2s ease;\n\n  ${({ $style }) => {\n    switch ($style) {\n      case 'secondary':\n        return `\n          color: #3b3b3b;\n          border: 1px solid #e9e9e9;\n\n          &:hover {\n            color: ${color.primary};\n            border: 1px solid ${color.primary};\n          }\n        `;\n      default:\n        return `\n          color: #ffffff;\n          background: ${color.primary};\n          border: 1px solid ${color.primary};\n\n          &:hover {\n            background: ${color.primaryDark};\n          }\n        `;\n    }\n  }}\n`;\n\nexport const Space = styled.div`\n  border-radius: 5px;\n  box-shadow: 0 3px 4px 0 #ececec;\n  background: #ffffff;\n  \n  &:not(:last-of-type) {\n    margin: 0 0 30px;\n  }\n`;\n","import styled from 'styled-components';\nimport * as GS from 'src/styles/styles';\n\nexport const Container = styled.div`\n  width: 100%;\n  position: fixed;\n  top: 0;\n  border-bottom: 1px solid #ededed;\n  background: #ffffff;\n`;\n\nexport const Wrapper = styled(GS.Wrapper)``;\n\nexport const FlexContainer = styled(GS.FlexContainer)`\n  width: 100%;\n  height: 64px;\n  padding: 0 30px;\n`;\n\nexport const Logo = styled.img`\n  max-height: 30px;\n`;\n\nexport const Button = styled(GS.MainButton)`\n  &:not(:last-of-type) {\n    margin: 0 15px 0 0;\n  }\n`;\n","import React from 'react';\nimport logo from 'src/assets/img/logo.png';\nimport * as S from './styles';\n\nconst Header = () => (\n  <S.Container>\n    <S.Wrapper>\n      <S.FlexContainer\n        $justify=\"space-between\"\n        $align=\"center\"\n      >\n        <S.Logo src={logo} alt=\"logo\" />\n        <div>\n          <S.Button $style=\"secondary\">Log in</S.Button>\n          <S.Button>Sign up</S.Button>\n        </div>\n      </S.FlexContainer>\n    </S.Wrapper>\n  </S.Container>\n);\n\nexport default Header;\n","import styled from 'styled-components';\nimport * as GS from 'src/styles/styles';\n\nexport const Container = styled.div`\n  width: 100%;\n  min-height: calc(100vh - 64px);\n  padding: 24px 0;\n  margin: 64px 0 0;\n  background: #f7f9fb;\n`;\n\nexport const Wrapper = styled(GS.Wrapper)``;\n\nexport const GridWrapper = styled.div`\n  padding: 0 30px;\n  display: grid;\n  grid-template-columns: 260px 1fr;\n  grid-column-gap: 40px;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport * as S from './styles';\n\nconst Content = ({ children }) => (\n  <S.Container>\n    <S.Wrapper>\n      <S.GridWrapper>\n        {children}\n      </S.GridWrapper>\n    </S.Wrapper>\n  </S.Container>\n);\n\nContent.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ]).isRequired\n};\n\nexport default Content;\n","import styled from 'styled-components';\nimport * as GS from 'src/styles/styles';\n\nexport const Container = styled.div``;\n\nexport const Link = styled(GS.MainLink)`\n  width: 100%;\n\n  &:not(:last-of-type) {\n    margin: 0 0 15px;\n  }\n`;\n","import React from 'react';\nimport { useLocation } from 'react-router-dom';\nimport * as S from './styles';\n\nconst linksData = [\n  {\n    to: '/',\n    text: 'Home'\n  },\n  {\n    to: '/editor',\n    text: 'Editor'\n  }\n];\n\nconst Navigation = () => {\n  const { pathname } = useLocation();\n\n  return (\n    <S.Container>\n      {linksData.map(({ to, text }) => (\n        <S.Link\n          key={to}\n          to={to}\n          $style={to === pathname ? undefined : 'secondary'}\n        >\n          {text}\n        </S.Link>\n      ))}\n    </S.Container>\n  );\n};\n\nexport default Navigation;\n","import styled from 'styled-components';\nimport * as GS from 'src/styles/styles';\n\nexport const Container = styled.div``;\n\nexport const Space = styled(GS.Space)`\n  padding: 30px;\n  color: #3b3b3b;\n`;\n\nexport const Title = styled.h3`\n  font-size: 28px;\n  font-weight: 600;\n  margin: 0 0 20px;\n`;\n\nexport const Text = styled.p`\n  color: #1d2839;\n  font-size: 18px;\n  font-weight: 400;\n  letter-spacing: .1px;\n  line-height: 24px;\n\n  &:not(:last-of-type) {\n    margin: 0 0 20px;\n  }\n`;\n","import React from 'react';\nimport * as S from './styles';\n\nconst textsData = [\n  `\n    HelpTap is a startup community and platform that provides all the resources\n    — knowledge, tools, experts, and capital — to talented entrepreneurs looking to\n    validate, build, and grow their business ideas.\n  `,\n  `\n    It's 2021 and yet starting up seems to be a dreadful thought for a lot of folks.\n    From idea validation to product development to marketing & fundraising,\n    there are a number of things that can - and do - go wrong at the early stages.\n  `,\n  `\n    Yes, there are a number of incubators, tools, funds, that have popped up over\n    the years but none have been able to become a go-to startup platform.\n  `,\n  `\n    We want to change this. Our mission is to democratize entrepreneurship by making\n    it easier for people to start up and build successful ventures. With startup DNA\n    in our roots, we understand what it takes to deal with failures and capitalize on the successes.\n  `\n];\n\nconst Home = () => (\n  <S.Container>\n    <S.Space>\n      <S.Title>\n        Helping Entrepreneurs Help the World! 🚀\n      </S.Title>\n      {textsData.map(elem => (\n        <S.Text key={elem}>\n          {elem}\n        </S.Text>\n      ))}\n    </S.Space>\n    <S.Space>\n      <S.Title>\n        Helping Entrepreneurs Help the World! 🚀\n      </S.Title>\n      {textsData.map(elem => (\n        <S.Text key={elem}>\n          {elem}\n        </S.Text>\n      ))}\n    </S.Space>\n  </S.Container>\n);\n\nexport default Home;\n","import { createAction } from '@reduxjs/toolkit';\n\nconst ActionType = {\n  SET_BOARD_COLUMNS: 'board/set-board-columns'\n};\n\nconst setBoardColumns = createAction(\n  ActionType.SET_BOARD_COLUMNS,\n  boardColumns => ({\n    payload: {\n      boardColumns\n    }\n  })\n);\n\nconst createColumn = ({ listId }) => (dispatch, getRootState) => {\n  const { board: { boardColumns } } = getRootState();\n\n  const result = [\n    ...boardColumns,\n    {\n      listId,\n      items: []\n    }\n  ];\n\n  dispatch(setBoardColumns(result));\n};\n\nconst createElement = ({ elemId, type, listId }) => (dispatch, getRootState) => {\n  const { board: { boardColumns } } = getRootState();\n\n  const result = boardColumns.map(elem => {\n    if (elem.listId === listId) {\n      return {\n        ...elem,\n        items: [\n          ...elem.items,\n          {\n            id: elemId,\n            type,\n            content: `Some ${type}`\n          }\n        ]\n      };\n    }\n\n    return elem;\n  });\n\n  dispatch(setBoardColumns(result));\n};\n\nconst reorder = (list, startIndex, endIndex) => {\n  const result = [...list];\n  const [removed] = result.splice(startIndex, 1);\n  result.splice(endIndex, 0, removed);\n\n  return result;\n};\n\nconst reorderColumn = ({ startIndex, endIndex }) => (dispatch, getRootState) => {\n  const { board: { boardColumns } } = getRootState();\n\n  const result = reorder(boardColumns, startIndex, endIndex);\n\n  dispatch(setBoardColumns(result));\n};\n\nconst reorderElement = ({ source, destination }) => (dispatch, getRootState) => {\n  const { board: { boardColumns } } = getRootState();\n\n  if (source.droppableId === destination.droppableId) {\n    const result = boardColumns.map(elem => {\n      if (elem.listId === destination.droppableId) {\n        const elemItems = reorder(elem.items, source.index, destination.index);\n\n        return {\n          ...elem,\n          items: elemItems\n        };\n      }\n\n      return elem;\n    });\n\n    dispatch(setBoardColumns(result));\n  } else {\n    const target = boardColumns.find(elem => elem.listId === source.droppableId).items[source.index];\n\n    const result = boardColumns.map(elem => {\n      if (elem.listId === source.droppableId) {\n        const elemItems = [...elem.items];\n        elemItems.splice(source.index, 1);\n\n        return {\n          ...elem,\n          items: elemItems\n        };\n      }\n      if (elem.listId === destination.droppableId) {\n        const elemItems = [...elem.items];\n        elemItems.splice(destination.index, 0, target);\n\n        return {\n          ...elem,\n          items: elemItems\n        };\n      }\n\n      return elem;\n    });\n\n    dispatch(setBoardColumns(result));\n  }\n};\n\nexport {\n  setBoardColumns,\n  createColumn,\n  createElement,\n  reorderColumn,\n  reorderElement\n};\n","import styled from 'styled-components';\n// import * as LS from '../../styles';\n\nexport const Title = styled.div`\n  font-size: 28px;\n  font-weight: 600;\n  margin: 0 0 20px;\n  color: #1d2839;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport * as S from './styles';\n\nconst Title = ({ id, content, isDragging, isGroupedOver, provided }) => (\n  <S.Title\n    id={id}\n    isDragging={isDragging}\n    isGroupedOver={isGroupedOver}\n    ref={provided.innerRef}\n    {...provided.draggableProps}\n    {...provided.dragHandleProps}\n  >\n    {content}\n  </S.Title>\n);\n\nTitle.propTypes = {\n  id: PropTypes.string.isRequired,\n  content: PropTypes.string.isRequired,\n  isDragging: PropTypes.bool.isRequired,\n  isGroupedOver: PropTypes.bool.isRequired,\n  provided: PropTypes.objectOf(PropTypes.any).isRequired\n};\n\nexport default Title;\n","import styled from 'styled-components';\n\nexport const Text = styled.div`\n  font-size: 18px;\n  line-height: 24px;\n  margin: 0 0 20px;\n  color: #1d2839;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport * as S from './styles';\n\nconst Text = ({ id, content, isDragging, isGroupedOver, provided }) => (\n  <S.Text\n    id={id}\n    isDragging={isDragging}\n    isGroupedOver={isGroupedOver}\n    ref={provided.innerRef}\n    {...provided.draggableProps}\n    {...provided.dragHandleProps}\n  >\n    {content}\n  </S.Text>\n);\n\nText.propTypes = {\n  id: PropTypes.string.isRequired,\n  content: PropTypes.string.isRequired,\n  isDragging: PropTypes.bool.isRequired,\n  isGroupedOver: PropTypes.bool.isRequired,\n  provided: PropTypes.objectOf(PropTypes.any).isRequired\n};\n\nexport default Text;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  padding: 30px 30px 0;\n  ${props => {\n    if (props.isDraggingOver) {\n      return 'background-color: #ecffc1';\n    }\n    if (props.isDraggingFrom) {\n      return 'background-color: #fcb0b4';\n    }\n    return '';\n  }}\n`;\n\nexport const DropZone = styled.div`\n  min-height: 30px;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Droppable, Draggable } from 'react-beautiful-dnd';\nimport Title from '../title/title';\nimport Text from '../text/text';\nimport * as S from './styles';\n\nconst List = ({ listId, items }) => (\n  <Droppable\n    droppableId={listId}\n    type=\"LIST\"\n  >\n    {(dropProvided, dropSnapshot) => (\n      <S.Wrapper\n        isDraggingOver={dropSnapshot.isDraggingOver}\n        isDraggingFrom={Boolean(dropSnapshot.draggingFromThisWith)}\n        {...dropProvided.droppableProps}\n      >\n        <S.DropZone ref={dropProvided.innerRef}>\n          {items.map(({ id, type, content }, index) => (\n            <Draggable\n              key={id}\n              draggableId={id}\n              index={index}\n              shouldRespectForceTouch={false}\n            >\n              {(dragProvided, dragSnapshot) => {\n                switch (type) {\n                  case 'Title':\n                    return (\n                      <Title\n                        key={id}\n                        id={id}\n                        content={content}\n                        isDragging={dragSnapshot.isDragging}\n                        isGroupedOver={Boolean(dragSnapshot.combineTargetFor)}\n                        provided={dragProvided}\n                      >\n                        {content}\n                      </Title>\n                    );\n                  default:\n                    return (\n                      <Text\n                        key={id}\n                        id={id}\n                        content={content}\n                        isDragging={dragSnapshot.isDragging}\n                        isGroupedOver={Boolean(dragSnapshot.combineTargetFor)}\n                        provided={dragProvided}\n                      >\n                        {content}\n                      </Text>\n                    );\n                }\n              }}\n            </Draggable>\n          ))}\n          {dropProvided.placeholder}\n        </S.DropZone>\n      </S.Wrapper>\n    )}\n  </Droppable>\n);\n\nList.propTypes = {\n  listId: PropTypes.string.isRequired,\n  items: PropTypes.arrayOf(PropTypes.objectOf(PropTypes.any)).isRequired\n};\n\nexport default List;\n","import styled from 'styled-components';\nimport * as GS from 'src/styles/styles';\n\nexport const Container = styled(GS.Space)`\n  width: 100%;\n  color: #3b3b3b;\n`;\n\nexport const Header = styled.div`\n  height: 30px;\n  width: 100%;\n  background: #08A2B5;\n  border-radius: 5px 5px 0 0;\n\n  &:hover {\n    background: #038c9b;\n  }\n`;\n\nexport const MenuContainer = styled.div`\n  position: relative;\n  width: 100%;\n  padding: 10px 30px 30px;\n`;\n\nexport const Input = styled.input`\n  border: none;\n  width: calc(100% - 60px);\n  padding: 5px 0;\n`;\n\nexport const Menu = styled.div`\n  position: absolute;\n  top: 28px;\n  left: 30px;\n  width: calc(100% - 60px);\n  background: #ffffff;\n  box-shadow: 0 3px 10px 0 #ececec;\n`;\n\nexport const MenuItem = styled.div`\n  width: 100%;\n  padding: 10px;\n\n  &:not(:last-of-type) {\n    border-bottom: 1px solid grey;\n  }\n\n  &:hover {\n    cursor: pointer;\n    background: #E85D64;\n  }\n`;\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { v4 as uuid } from 'uuid';\nimport { Draggable } from 'react-beautiful-dnd';\nimport { boardActionCreator } from 'src/store/actions';\nimport {\n  List\n} from './partials/partials';\nimport * as S from './styles';\n\nconst addingOptions = [\n  {\n    text: 'Add Title',\n    type: 'Title'\n  },\n  {\n    text: 'Add Text',\n    type: 'Text'\n  }\n];\n\nconst Column = ({ listId, listIndex, items }) => {\n  const dispatch = useDispatch();\n  const [inputValue, setInputValue] = useState('');\n\n  const createElement = type => {\n    dispatch(boardActionCreator.createElement({\n      elemId: uuid(),\n      type,\n      listId\n    }));\n    setInputValue('');\n  };\n\n  return (\n    <Draggable draggableId={listId} index={listIndex}>\n      {(provided, snapshot) => (\n        <S.Container\n          {...provided.draggableProps}\n          ref={provided.innerRef}\n          isDragging={snapshot.isDragging}\n        >\n          <S.Header\n            {...provided.dragHandleProps}\n            isDragging={snapshot.isDragging}\n          />\n          <List\n            listId={listId}\n            items={items}\n          />\n          <S.MenuContainer>\n            <S.Input\n              type=\"text\"\n              placeholder=\"Type '/' for commands\"\n              value={inputValue}\n              onChange={e => setInputValue(e.target.value)}\n            />\n            {inputValue === '/'\n            && (\n              <S.Menu>\n                {addingOptions.map(({ type, text }) => (\n                  <S.MenuItem key={type} onClick={() => createElement(type)}>\n                    {text}\n                  </S.MenuItem>\n                ))}\n              </S.Menu>\n            )}\n          </S.MenuContainer>\n        </S.Container>\n      )}\n    </Draggable>\n  );\n};\n\nColumn.propTypes = {\n  listId: PropTypes.string.isRequired,\n  listIndex: PropTypes.number.isRequired,\n  items: PropTypes.arrayOf(PropTypes.objectOf(PropTypes.any)).isRequired\n};\n\nexport default Column;\n","import styled from 'styled-components';\nimport * as GS from 'src/styles/styles';\n\nexport const Container = styled.div``;\n\nexport const Control = styled.div`\n  margin: 0 0 40px;\n`;\n\nexport const AddGroupButton = styled(GS.MainButton)``;\n\nexport const DndWrapper = styled.div`\n  width: 100%;\n  overflow-x: auto;\n`;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { v4 as uuid } from 'uuid';\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\nimport { boardActionCreator } from 'src/store/actions';\nimport { Column } from './components/components';\nimport * as S from './styles';\n\nconst Editor = () => {\n  const {\n    boardColumns\n  } = useSelector(store => ({\n    boardColumns: store.board.boardColumns\n  }));\n  const dispatch = useDispatch();\n\n  const onDragEnd = result => {\n    const { source, destination, type } = result;\n\n    if (!destination) {\n      return;\n    }\n\n    if (type === 'COLUMN') {\n      dispatch(boardActionCreator.reorderColumn({\n        startIndex: source.index,\n        endIndex: destination.index\n      }));\n    }\n    if (type === 'LIST') {\n      dispatch(boardActionCreator.reorderElement({\n        source,\n        destination\n      }));\n    }\n  };\n\n  const createColumn = () => {\n    dispatch(boardActionCreator.createColumn({\n      listId: uuid()\n    }));\n  };\n\n  return (\n    <S.Container>\n      <S.Control>\n        <S.AddGroupButton\n          onClick={createColumn}\n        >\n          Add Group\n        </S.AddGroupButton>\n      </S.Control>\n      <DragDropContext onDragEnd={onDragEnd}>\n        <Droppable\n          droppableId=\"board\"\n          type=\"COLUMN\"\n        >\n          {provided => (\n            <S.DndWrapper\n              $justify=\"space-between\"\n              $align=\"flex-start\"\n              $wrap=\"wrap\"\n              ref={provided.innerRef}\n              {...provided.droppableProps}\n            >\n              {boardColumns.map(({ listId, items }, listIndex) => (\n                <Column\n                  key={listId}\n                  listId={listId}\n                  listIndex={listIndex}\n                  items={items}\n                />\n              ))}\n              {provided.placeholder}\n            </S.DndWrapper>\n          )}\n        </Droppable>\n      </DragDropContext>\n    </S.Container>\n  );\n};\n\nexport default Editor;\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Header from 'src/components/header/header';\nimport Content from 'src/components/content/content';\nimport Navigation from 'src/components/navigation/navigation';\nimport Home from 'src/components/home/home';\nimport Editor from 'src/components/editor/editor';\n\nconst App = () => (\n  <>\n    <Header />\n    <Content>\n      <Navigation />\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path=\"/editor\" component={Editor} />\n      </Switch>\n    </Content>\n  </>\n);\n\nexport default App;\n","import { createReducer } from '@reduxjs/toolkit';\nimport {\n  setBoardColumns\n} from './actions';\n\nconst localData = localStorage.getItem('reduxState')\n  ? JSON.parse(localStorage.getItem('reduxState'))\n  : {};\n\nconst initialState = {\n  boardColumns: [],\n  ...localData.board\n};\n\nconst reducer = createReducer(initialState, builder => {\n  builder.addCase(setBoardColumns, (state, action) => {\n    const { boardColumns } = action.payload;\n\n    state.boardColumns = boardColumns;\n  });\n});\n\nexport { reducer };\n","import { configureStore } from '@reduxjs/toolkit';\n\nimport { board } from './root-reducer';\n\nconst store = configureStore({\n  reducer: {\n    board\n  }\n});\n\nstore.subscribe(() => {\n  localStorage.setItem('reduxState', JSON.stringify(store.getState()));\n});\n\nexport default store;\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { GlobalStyle } from 'src/styles/globalStyles';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport App from 'src/components/app';\nimport store from 'src/store/store';\n\nrender(\n  <>\n    <GlobalStyle />\n    <Provider store={store}>\n      <Router basename=\"/react-dnd\">\n        <App />\n      </Router>\n    </Provider>\n  </>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}